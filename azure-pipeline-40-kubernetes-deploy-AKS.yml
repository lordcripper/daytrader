trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Kubernetes@1
  displayName: 'daytrader-accounts-deployment-k8s'
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: 'daytrader-cluster-srv-conn'
    command: 'apply'
    arguments: '-f day-trader-java-app/daytrader-kubernetes-manifests/accounts/deployment.yaml'
    secretType: 'dockerRegistry'

- task: Kubernetes@1
  displayName: 'daytrader-accounts-service-k8s'
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: 'daytrader-cluster-srv-conn'
    command: 'apply'
    arguments: '-f day-trader-java-app/daytrader-kubernetes-manifests/accounts/service.yaml'

- task: Kubernetes@1
  displayName: 'daytrader-gateway-deployment-k8s'
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: 'daytrader-cluster-srv-conn'
    command: 'apply'
    arguments: '-f day-trader-java-app/daytrader-kubernetes-manifests/gateway/deployment.yaml'

- task: Kubernetes@1
  displayName: 'daytrader-gateway-service-k8s'
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: 'daytrader-cluster-srv-conn'
    command: 'apply'
    arguments: '-f day-trader-java-app/daytrader-kubernetes-manifests/gateway/service.yaml'

- task: Kubernetes@1
  displayName: 'daytrader-portfolios-deployment-k8s'
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: 'daytrader-cluster-srv-conn'
    command: 'apply'
    arguments: '-f day-trader-java-app/daytrader-kubernetes-manifests/portfolios/deployment.yaml'

- task: Kubernetes@1
  displayName: 'daytrader-portfolios-service-k8s'
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: 'daytrader-cluster-srv-conn'
    command: 'apply'
    arguments: '-f day-trader-java-app/daytrader-kubernetes-manifests/portfolios/service.yaml'

- task: Kubernetes@1
  displayName: 'daytrader-quotes-deployment-k8s'
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: 'daytrader-cluster-srv-conn'
    command: 'apply'
    arguments: '-f day-trader-java-app/daytrader-kubernetes-manifests/quotes/deployment.yaml'

- task: Kubernetes@1
  displayName: 'daytrader-quotes-service-k8s'
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: 'daytrader-cluster-srv-conn'
    command: 'apply'
    arguments: '-f day-trader-java-app/daytrader-kubernetes-manifests/quotes/service.yaml'

- task: Kubernetes@1
  displayName: 'daytrader-web-deployment-k8s'
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: 'daytrader-cluster-srv-conn'
    command: 'apply'
    arguments: '-f day-trader-java-app/daytrader-kubernetes-manifests/web/deployment.yaml'

- task: Kubernetes@1
  displayName: 'daytrader-web-service-k8s'
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: 'daytrader-cluster-srv-conn'
    command: 'apply'
    arguments: '-f day-trader-java-app/daytrader-kubernetes-manifests/web/service.yaml'

- task: Kubernetes@1
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: 'daytrader-cluster-srv-conn'
    command: 'apply'
    arguments: '-f day-trader-java-app/daytrader-kubernetes-manifests/ingress/ingress.yaml'
    secretType: 'dockerRegistry'

